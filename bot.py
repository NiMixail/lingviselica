import telebot
from telebot import types
from random import choice
from hangman import hangman
from re import sub

cyr = list('–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø-.')

with open('token.txt') as f:
    token = f.read()

bot = telebot.TeleBot(token)

keyboard = types.ReplyKeyboardMarkup(row_width=5)
buttons = [types.KeyboardButton(text=letter) for letter in cyr]
keyboard.add(*buttons)

words = {}
with open('dictionary.txt', 'r', encoding='utf-8') as f:
    for line in f:
        words[line.split(' * ')[0]] = line.split(' * ')[1]
frazeos = {}
with (open('dictionary_f_.txt', 'r', encoding='utf-8') as f):
    for line in f:
        line = sub(r'</?div.*?>|<br.*?>|a href.*?.htm¬ª', '', line
                   ).replace('&amp;LT;', '‚ü®').replace('&amp;GT;', '‚ü©')
        frazeo = sub(r'\(.*?\)', '', line.split(' ###### ')[0]).upper()
        frazeos[frazeo] = line.split(' ###### ')[1]
chats = {}

neg = """–ß—ë —Ç–æ —É –≤–∞—Å –º–∏–Ω—É—Å –º–æ–∑–≥.
–î–∞–∂–µ –º—è—Å–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–µ–π, —á–µ–º —Ç—ã.
–í–æ–æ–±—â–µ –Ω–µ people of culture
–í—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ, —Ö—É–¥—à–∏–µ, —Ç–æ–ø -10000.
–í—ã —É–∂–µ —Å–ª–∏–ª–∏—Å—å —Å –±–µ—Ç–æ–Ω–æ–º, –≤—ã –≤–æ–æ–±—â–µ –Ω–µ –ª—é–¥–∏.
–í–æ–¥–∫–∞ –±–µ–∑ –∫–æ–ª—ã - –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤–µ—Ç–µ—Ä.
–ö–æ–ª–ª–µ–≥–∏, –µ—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø–æ–º–Ω–∏—Ç–µ —ç—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –º—ã –≤—Å–µ–º –≤—ã–ø–∏—à–µ–º –∑–∞ —Å—á–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—á–µ–±–Ω–∏–∫–∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ 5 –∫–ª–∞—Å—Å–∞.""".split(
    '\n')

pos = """–Ø –µ–º –¥–µ–¥–æ–≤.
–ú–Ω–µ –ø–æ—Ä–∞ –ø–æ–≤–µ—Å–∏—Ç—å—Å—è. –í–∞–º –≤—Ä–µ–º—è –∑–∞–≤–∞—Ä–∏—Ç—å —á–∞–π.
–•–∞–π–ø–∏–º, —Ö–∞–π–ø–∏–º, —ã—ç—ç—ç‚Ä¶
–ê–±–∞–±—É–±–∞–±—É–±–∞–±–∞–±–∞.
–û—â—É—â–µ–Ω–∏—è - –ê–¢–ê–°!!! –ø–æ–ª–Ω—ã–π –§–ï–§–ï–§–ï!
–ú–Ø–Ø–Ø–Ø–£!
–ö–∞–∫–æ–≥–æ —á—ë—Ä—Ç–∞ —É –≤–∞—Å —ç—Ç–æ —Å–ª–æ–≤–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?
""".split('\n')


def upd(chat_id):
    try:
        chat = chats[chat_id]
        text = f"<code>{hangman[chat['mis']]}</code>\n{chat['view']}"
        if text != chat['msg'].text:
                bot.edit_message_text(chat_id=chat_id,
                                      message_id=chat['msg'].id,
                                      text=text,
                                      parse_mode='HTML')
                # bot.edit_message_reply_markup()
    except Exception as e:
        print(e)


@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, text='''–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! 
    –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ—é, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /guess.
    –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≥–∞–¥—ã–≤–∞—Ç—å —Ñ—Ä–∞–∑–µ–æ–ª–æ–≥–∏–∑–º, –∞ –Ω–µ —Ç–µ—Ä–º–∏–Ω, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /fguess.
    –ß—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±—É–∫–≤, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /jajemdedov.
    –í –º–æ–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –±–æ–ª–µ–µ 2500 —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ 14300 —Ñ—Ä–∞–∑–µ–æ–ª–æ–≥–∏–∑–º–æ–≤. –£–¥–∞—á–∏!''')


@bot.message_handler(commands=['test'])
def test(message):
    ch = choice(list(frazeos.keys()))
    print(ch)
    bot.reply_to(message,
                 text=frazeos[ch],
                 parse_mode='HTML')


@bot.message_handler(commands=['jajemdedov'])
def jajemdedov(message):
    remove_markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–∫–∏–Ω—É–≤ –≤–∑–≥–ª—è–¥ –≤ –∑–∞–≥–∞–¥–æ—á–Ω–æ–π –º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–æ–π —à–ª—è–ø–∏, —É–±–∏—Ä–∞—é –∫–Ω–æ–ø–∫–∏ —Å –±—É–∫–≤–∞–º–∏...",
                     reply_markup=remove_markup)


@bot.message_handler(commands=['guess'])
def guess(message):
    bot.reply_to(message, text='„Ö§', reply_markup=keyboard)
    print(message.chat.id)
    chats[message.chat.id] = {'w': choice(list(words.keys())),
                              'view': None,
                              'mis': 0,
                              'abc': {c: 7 for c in cyr}}  # 7 - not used, 2 - guessed, 1 - wrong
    chats[message.chat.id]['info'] = words[chats[message.chat.id]['w']]
    chats[message.chat.id]['view'] = ''.join(i + ' ' if i == ' ' else '_ ' for i in chats[message.chat.id]['w'])
    chats[message.chat.id]['msg'] = bot.reply_to(message,
                                                 text=f"<code>{hangman[0]}</code>\n{chats[message.chat.id]['view']}",
                                                 parse_mode='HTML')

@bot.message_handler(commands=['fguess'])
def fguess(message):
    bot.reply_to(message, text='„Ö§', reply_markup=keyboard)
    print('f', message.chat.id)
    chats[message.chat.id] = {'w': choice(list(frazeos.keys())),
                              'view': None,
                              'mis': 0,
                              'abc': {c: 7 for c in cyr}}  # 7 - not used, 2 - guessed, 1 - wrong
    chats[message.chat.id]['info'] = frazeos[chats[message.chat.id]['w']]
    chats[message.chat.id]['view'] = ''.join(i + ' ' if i == ' ' else '_ ' for i in chats[message.chat.id]['w'])
    chats[message.chat.id]['msg'] = bot.reply_to(message,
                                                 text=f"<code>{hangman[0]}</code>\n{chats[message.chat.id]['view']}",
                                                 parse_mode='HTML')

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    ch = chats[message.chat.id]
    if (ch['w'] and (len(message.text) == 1 or message.text == ch['w'])
            and (message.text.isupper() or not message.text.isalpha())):
        c = message.text
        if c in ch['w']:
            if c == ch['w']:
                ch['view'] = ''.join(i + ' ' for i in ch['w'])
            if c in ch['abc']:
                if ch['abc'][c] != 2:
                    ch['abc'][c] = 2
                    for i in range(len(ch['w'])):
                        if ch['w'][i] == c:
                            ch['view'] = ch['view'][:i * 2] + c + ' ' + ch['view'][(i + 1) * 2:]
                    upd(message.chat.id)
            if ch['view'] == ''.join(i + ' ' for i in ch['w']):
                bot.reply_to(message,
                             f"{choice(pos)} \n–ë—ã–ª–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥–∞–¥–∞–Ω–æ <b>{ch['w']}</b> ‚Äî {ch['info']}",
                             parse_mode='HTML')
                ch['w'] = None
        else:
            if c in ch['abc']:
                ch['abc'][c] = 1
            ch['mis'] += 1
            bot.set_message_reaction(message.chat.id, message.message_id,
                                     [types.ReactionTypeEmoji("üëé")])
            upd(message.chat.id)
            if ch['mis'] == len(hangman) - 1:
                bot.reply_to(message,
                             text=f'{choice(neg)} \n–ë—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ <b>{ch["w"]}</b> ‚Äî {ch["info"]}',
                             parse_mode='HTML')
                ch['w'] = None


bot.polling()
